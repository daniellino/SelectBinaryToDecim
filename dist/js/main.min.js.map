{"version":3,"sources":["main.js"],"names":["deciToBinary","popNumArr","resetWholeGeneration","window","location","reload","decimVal","getElementById","clickedObjectContainer","addUpresult","floor","Math","random","deimalVlaue","document","numbersDigitLimitAndReset","alert","agregate","length","k","concat","givenAns","innerHTML","populateAnsComb","finalChosenDigits","textContent","takeNum","push","runToCheck","toString","substr","resultAns","allglued","join","myFunctionCorrect","backgroundColor","color","undefined","body","style","myFunctionFalse"],"mappings":"aAAA,IAKIA,aAFEC,uBAHAC,qBAAuB,WACzBC,OAAOC,SAASC,UAAhBF,UAAgBE,GADpBC,SAAA,EAKIN,SAAAA,SAAJO,eAAA,WACIC,YAAAA,EAGJF,SAAIG,KAAWC,MAAf,IAAAC,KAAAC,UAEA,IAAAC,YAAAC,SAAAP,eAAA,iBAEA,SAAIM,4BACJA,MAAAA,6BACAX,uBACA,SAASa,kBAELb,IADAc,IAAKC,EAAA,GACLf,EAAAA,EAAAA,EAAoBD,UAAAiB,OAAAC,IAExB,GADCF,EAAAA,EAAAG,OAAAnB,UAAAkB,IAKOE,SAASC,UAAYL,EAJF,EAAlBM,UAAAA,OACDN,OAAJF,4BAGIM,SAAAA,gBAOJ,IAAIG,EAAoB,GANhBvB,EAAUiB,uBAAYO,YACtBC,EAAOX,SAAAA,GACVd,UAAA0B,KAAAD,GACJjB,aAAAiB,EACJH,kBAQG,IAAK,IAAIJ,EAAI,EAAGA,EAAIlB,UAAUiB,OAAQC,IAP1CK,EAAyBA,EAAAJ,OAAAnB,UAAAkB,IAOrB,SAAKS,aAeL5B,aAAuBM,SAX3BuB,SAAA,GAGA7B,aAAA,WAAA8B,OAAA9B,aAAAkB,QAAAlB,aAUI,IAAI+B,EAAYjB,SAASP,eAAe,cAQxC,IAAIyB,EAAW/B,UAAUgC,KAAK,IAT9BjC,SAAAA,IAcI+B,EAAUT,UAAY,SAZ1BR,SAASoB,KAAAA,MAATC,gBAA6B,UACzBJ,EAAUT,MAAVc,MAAsB,UAEdf,SAAOe,UAaI,IAAf3B,YAbI,sBAAAW,OAARpB,aAAQ,qCAGZ,wBAAAoB,OAAApB,aAAA,wBAAAoB,OAAAnB,UAAA,OAmB8BoC,MAA1B7B,wBAbAuB,QAAUT,IAAAA,cACFtB,eAAYmC,GAtB5BJ,EAASH,UAAa,WAClBd,SAAAwB,KAAAC,MAAAJ,gBAAA,UACAd,SAAAkB,MAAAH,MAAA,WAuCQI,KAbAnB,IA5DZR,YAAYS,UAAYhB","file":"main.min.js","sourcesContent":["const resetWholeGeneration = () => {\r\n    window.location.reload();\r\n}\r\nconst popNumArr = [];\r\nlet decimVal = 0;\r\nlet deciToBinary;\r\nlet clickedObjectContainer;\r\n// let finalChosenDigits = '';\r\nlet givenAns = document.getElementById('combAns');\r\nlet addUpresult = 0;\r\n\r\n/****************************************************************** */\r\ndecimVal = Math.floor(Math.random() * 256);\r\nlet deimalVlaue = document.getElementById(\"decimal-Value\");\r\ndeimalVlaue.innerHTML = decimVal;\r\n/********************************************************************************** */\r\nfunction numbersDigitLimitAndReset() {\r\n    alert(`Only 8 digits are allowed`);\r\n    resetWholeGeneration();\r\n}\r\nfunction populateAnsComb() {\r\n    let agregate = '';\r\n    for (let k = 0; k < popNumArr.length; k++) {\r\n        agregate = agregate.concat(popNumArr[k]);\r\n        givenAns.innerHTML = agregate;\r\n        if (popNumArr.length > 8) {\r\n            return numbersDigitLimitAndReset();\r\n        }\r\n    }\r\n}\r\nfunction givenAnsAddUp() {\r\n    let finalChosenDigits = '';\r\n    let takeNum = clickedObjectContainer.textContent;\r\n    takeNum = parseInt(takeNum);\r\n    popNumArr.push(takeNum);\r\n    addUpresult = addUpresult + takeNum;\r\n    populateAnsComb();\r\n    for (let k = 0; k < popNumArr.length; k++) {\r\n        finalChosenDigits = finalChosenDigits.concat(popNumArr[k]);\r\n    }\r\n} //~~~~~~~~~End of Function givenAnsAddUp\r\n// console.log(finalChosenDigits);\r\n// console.log(popNumArr);\r\n\r\n/*********************************************End of random shuffling of the options**************/\r\n\r\nfunction runToCheck() {\r\n    // let hidTable = document.querySelector('.answersTable').style.display = 'none';\r\n    //~~~~~~~~~~~~~~~~function definition for correct\r\n    function dec2bin(dec) {\r\n        return (dec).toString(2);\r\n    }//doesnt show leadin zeros\r\n    deciToBinary = dec2bin(decimVal);\r\n    deciToBinary = \"00000000\".substr(deciToBinary.length) + deciToBinary;\r\n    let resultAns = document.getElementById('matchField');\r\n    function myFunctionCorrect() {\r\n        resultAns.innerHTML = 'Correct!';\r\n        document.body.style.backgroundColor = '#96E29A'; //color feedback correct\r\n        givenAns.style.color = '#22E02D';\r\n    } //end of function myFunctionCorrect\r\n\r\n    // console.log(popNumArr);\r\n    let allglued = popNumArr.join('');//combining the popNumArr items as one byte of binary number\r\n    // console.log(allglued);\r\n    //~~~~~~~~~~~~~~~~function definition for False\r\n    function myFunctionFalse() {\r\n        //injecting a class for changing the color of the FALSE text to red\r\n        resultAns.innerHTML = 'False!';\r\n        document.body.style.backgroundColor = '#FF5760'; //color feedback correct\r\n        resultAns.style.color = '#FF0000';\r\n\r\n        if (addUpresult == '') {\r\n            givenAns.innerHTML = `Correct answer is: ${deciToBinary}, and you didn't choose an option`\r\n        } else {\r\n            givenAns.innerHTML = `Correct answer is: \"${deciToBinary}\", but You Chose \"${popNumArr}\"!`;\r\n        }\r\n    }\r\n\r\n    //~~~~~~~~~~~~~~~~Main condition~~~~~~~~~~~~~////////////////////////////////\r\n    // let cmbAnsFieldContent = givenAns.innerText;\r\n    if (clickedObjectContainer != undefined) {\r\n        // console.log(`run to check!`);\r\n\r\n        console.log(deciToBinary);\r\n        if (deciToBinary === allglued) {\r\n            myFunctionCorrect();\r\n        } else {\r\n            myFunctionFalse();\r\n        }\r\n\r\n    } else {\r\n        myFunctionFalse();\r\n    }\r\n} //end of function runToCheck\r\n\r\n/*▐▐▐▐▐▐▐▐▐Assigning shuffled new array elements to HTML cells in the table▐▐▐▐▐▐▐▐▐▐▐*/\r\n"]}